name: Example CI/CD DevSecOps BSides Lumen

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lumen-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [7.3, 7.4, 8.0]

    name: TEST - PHP ${{ matrix.php }}

    services:
    #############################
    # Create service PostgreSql #
    #############################
      postgres:
        image: postgres:11
        env:
          POSTGRES_DB: ${{secrets.LUMEN_DATABASE_DB}}
          POSTGRES_USER: ${{ secrets.LUMEN_DATABASE_USER }}
          POSTGRES_PASSWORD: ${{ secrets.LUMEN_DATABASE_PASS }}
          VIRTUAL_HOST: iron-psql.localhost
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
    #############################
    # Detect Secrets            #
    #############################
    - name: Detect Secrets
      uses: evanextreme/detect-secrets-action@1.0.0

    #############################
    # Start testing machine     #
    #############################
    - uses: shivammathur/setup-php@b7d1d9c9a92d8d8463ce36d7f60da34d461724f8
      with:
        php-version: '${{ matrix.php }}'
    - uses: actions/checkout@v2

    #############################
    # Cache PHP dependencies     #
    #############################
    - name: Cache PHP dependencies
      uses: actions/cache@v1
      with:
        path: vendor
        key: dependencies-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
  
    #############################
    # Create .env               #
    #############################
    - name: Create .env LARAVEL_CONTENT_ENV
      #run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      run: php -r "file_put_contents('.env', '${{ secrets.LARAVEL_CONTENT_ENV }}');"

    #############################
    # Install composer          #
    #############################
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Run Docker show 
      run: docker ps 
    #- name: Generate key
    #  run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 755 storage 
    - name: Create Database
      run: php artisan migrate --force
    #############################
    #  Run postman              #
    #############################
    - uses: matt-ball/newman-action@master
      with:
        apiKey: ${{ secrets.POSTMAN_APIKEY }}
        collection: https://www.getpostman.com/collections/51be32b988a261fac239
        environment: 1ae83ea4-c4ba-4f77-971b-4cf7814f8653
    
  #############################
  #  Run Deploy               #
  #############################
  deploy:
    runs-on: ubuntu-latest
    needs: lumen-tests
    if: github.ref == 'refs/heads/main'
    steps:

      # Install AWS CLI 2
      - name: Install AWS CLI 2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
    
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache PHP dependencies
        uses: actions/cache@v1
        with:
          path: vendor
          key: dependencies-php-composer-${{ hashFiles('**/composer.lock') }}

      - name: AWS Create Deployment
        run: |
          aws deploy create-deployment \
           --application-name ${{ matrix.appname }} \
           --deployment-config-name CodeDeployDefault.OneAtATime \
           --deployment-group-name ${{ matrix.deploy-group }} \
           --file-exists-behavior OVERWRITE  
           --source .
       
